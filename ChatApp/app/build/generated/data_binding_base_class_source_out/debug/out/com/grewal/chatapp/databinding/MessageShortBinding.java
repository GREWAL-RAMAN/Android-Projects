// Generated by view binder compiler. Do not edit!
package com.grewal.chatapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.grewal.chatapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageShortBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateView;

  @NonNull
  public final CardView messageCardView;

  @NonNull
  public final ImageView messageImageView;

  @NonNull
  public final ImageView seenIcon;

  @NonNull
  public final TextView senderMessage;

  @NonNull
  public final TextView senderName;

  private MessageShortBinding(@NonNull CardView rootView, @NonNull TextView dateView,
      @NonNull CardView messageCardView, @NonNull ImageView messageImageView,
      @NonNull ImageView seenIcon, @NonNull TextView senderMessage, @NonNull TextView senderName) {
    this.rootView = rootView;
    this.dateView = dateView;
    this.messageCardView = messageCardView;
    this.messageImageView = messageImageView;
    this.seenIcon = seenIcon;
    this.senderMessage = senderMessage;
    this.senderName = senderName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageShortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageShortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.message_short, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageShortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateView;
      TextView dateView = ViewBindings.findChildViewById(rootView, id);
      if (dateView == null) {
        break missingId;
      }

      CardView messageCardView = (CardView) rootView;

      id = R.id.message_image_view;
      ImageView messageImageView = ViewBindings.findChildViewById(rootView, id);
      if (messageImageView == null) {
        break missingId;
      }

      id = R.id.seen_icon;
      ImageView seenIcon = ViewBindings.findChildViewById(rootView, id);
      if (seenIcon == null) {
        break missingId;
      }

      id = R.id.sender_message;
      TextView senderMessage = ViewBindings.findChildViewById(rootView, id);
      if (senderMessage == null) {
        break missingId;
      }

      id = R.id.senderName;
      TextView senderName = ViewBindings.findChildViewById(rootView, id);
      if (senderName == null) {
        break missingId;
      }

      return new MessageShortBinding((CardView) rootView, dateView, messageCardView,
          messageImageView, seenIcon, senderMessage, senderName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
